/******************************************************************************
 * MARGIN UTILITIES
 *****************************************************************************/

/**
 * Margin Utilities
 *
 * Generates:
 * - Global margin classes in `rem` (no suffix) and `vw` (with suffix).
 * - Responsive margin classes for small screens (prefix `sm-`).
 * - Auto margin utilities for dynamic alignment.
 */

// Define special margin values for precise spacing
$special-margins: (
    "0125": 0.125,  // 0.125rem
    "025" : 0.25,   // 0.25rem
    "0375": 0.375,  // 0.375rem
    "045" : 0.45,   // 0.45rem
    "05"  : 0.5,    // 0.5rem
    "065" : 0.65,   // 0.65rem
    "075" : 0.75,   // 0.75rem
    "15"  : 1.5,    // 1.5rem
    "175" : 1.75    // 1.75rem
);

/**
 * Mixin: Generate Margin Classes
 *
 * @param $range  Number of classes to generate (e.g., 0 through $range).
 * @param $unit   Unit of measurement (default: rem).
 * @param $prefix Optional prefix for responsive classes (e.g., "sm-").
 * @param $suffix Optional suffix for unit-specific classes (e.g., "vw").
 */
@mixin generate-margin-classes($range, $unit: rem, $prefix: "", $suffix: "") {
    @for $i from 0 through $range {
        .m-#{$prefix}#{$i}#{$suffix}  { margin: #{$i}#{$unit}; }
        .mt-#{$prefix}#{$i}#{$suffix} { margin-top: #{$i}#{$unit} !important; }
        .mr-#{$prefix}#{$i}#{$suffix} { margin-right: #{$i}#{$unit} !important; }
        .mb-#{$prefix}#{$i}#{$suffix} { margin-bottom: #{$i}#{$unit} !important; }
        .ml-#{$prefix}#{$i}#{$suffix} { margin-left: #{$i}#{$unit} !important; }
    }
}

/**
 * Mixin: Generate Special Margin Classes
 *
 * @param $values A map of special sizes and their corresponding values.
 * @param $unit   Unit of measurement (default: rem).
 * @param $prefix Optional prefix for responsive classes (e.g., "sm-").
 * @param $suffix Optional suffix for unit-specific classes (e.g., "vw").
 */
@mixin generate-special-margin-classes($values, $unit: rem, $prefix: "", $suffix: "") {
    @each $size, $value in $values {
        .m-#{$prefix}#{$size}#{$suffix}  { margin: #{$value}#{$unit}; }
        .mt-#{$prefix}#{$size}#{$suffix} { margin-top: #{$value}#{$unit} !important; }
        .mr-#{$prefix}#{$size}#{$suffix} { margin-right: #{$value}#{$unit} !important; }
        .mb-#{$prefix}#{$size}#{$suffix} { margin-bottom: #{$value}#{$unit} !important; }
        .ml-#{$prefix}#{$size}#{$suffix} { margin-left: #{$value}#{$unit} !important; }
    }
}

/**
 * Global Margin Classes
 *
 * Generates margin utilities for:
 * - `.m-{value}`: Margins in rem (e.g., `.m-1` for 1rem).
 * - `.m-{value}vw`: Margins in vw (e.g., `.m-1vw` for 1vw).
 * - Special values for precise margins (e.g., `.m-05` for 0.5rem).
 */
@include generate-margin-classes(15, rem); // Margins from 0 to 15rem
@include generate-margin-classes(5, vw, "", "vw");  // Margins from 0 to 5vw
@include generate-special-margin-classes($special-margins, rem); // Special margin sizes in rem

/**
 * Responsive Margin Classes for Small Screens
 *
 * Generates classes with `sm-` prefix:
 * - `.m-sm-{value}`: Margins for small screens (e.g., `.m-sm-1` for 1rem).
 * - Special sizes (e.g., `.m-sm-05` for 0.5rem).
 */
@media (max-width: 750px) {
    @include generate-margin-classes(15, rem, "sm-"); // Small screen rem margins
    @include generate-special-margin-classes($special-margins, rem, "sm-"); // Small screen special margins
}

/**
 * Auto Margin Utilities
 *
 * Generates:
 * - `.mt-auto`: Automatically adjusts top margin.
 * - `.mb-auto`: Automatically adjusts bottom margin.
 * - `.ml-auto`: Automatically adjusts left margin.
 * - `.mr-auto`: Automatically adjusts right margin.
 */
.mt-auto { margin-top: auto !important; }
.mb-auto { margin-bottom: auto !important; }
.ml-auto { margin-left: auto !important; }
.mr-auto { margin-right: auto !important; }


/******************************************************************************
 * PADDING UTILITIES
 *****************************************************************************/

/**
 * Padding Utilities
 *
 * Generates:
 * - Global padding classes in `rem` (no suffix) and `vw` (with suffix).
 * - Responsive padding classes for small screens (prefix `sm-`).
 * - Auto padding utilities for dynamic alignment.
 */

// Define special padding values for precise spacing
$special-paddings: (
    "0125": 0.125,  // 0.125rem
    "025" : 0.25,   // 0.25rem
    "0375": 0.375,  // 0.375rem
    "045" : 0.45,   // 0.45rem
    "05"  : 0.5,    // 0.5rem
    "065" : 0.65,   // 0.65rem
    "075" : 0.75,   // 0.75rem
    "15"  : 1.5,    // 1.5rem
    "175" : 1.75    // 1.75rem
);

/**
 * Mixin: Generate Padding Classes
 *
 * @param $range  Number of classes to generate (e.g., 0 through $range).
 * @param $unit   Unit of measurement (default: rem).
 * @param $prefix Optional prefix for responsive classes (e.g., "sm-").
 * @param $suffix Optional suffix for unit-specific classes (e.g., "vw").
 */
@mixin generate-padding-classes($range, $unit: rem, $prefix: "", $suffix: "") {
    @for $i from 0 through $range {
        .p-#{$prefix}#{$i}#{$suffix}  { padding: #{$i}#{$unit}; }
        .pt-#{$prefix}#{$i}#{$suffix} { padding-top: #{$i}#{$unit} !important; }
        .pr-#{$prefix}#{$i}#{$suffix} { padding-right: #{$i}#{$unit} !important; }
        .pb-#{$prefix}#{$i}#{$suffix} { padding-bottom: #{$i}#{$unit} !important; }
        .pl-#{$prefix}#{$i}#{$suffix} { padding-left: #{$i}#{$unit} !important; }
    }
}

/**
 * Mixin: Generate Special Padding Classes
 *
 * @param $values A map of special sizes and their corresponding values.
 * @param $unit   Unit of measurement (default: rem).
 * @param $prefix Optional prefix for responsive classes (e.g., "sm-").
 * @param $suffix Optional suffix for unit-specific classes (e.g., "vw").
 */
@mixin generate-special-padding-classes($values, $unit: rem, $prefix: "", $suffix: "") {
    @each $size, $value in $values {
        .p-#{$prefix}#{$size}#{$suffix}  { padding: #{$value}#{$unit}; }
        .pt-#{$prefix}#{$size}#{$suffix} { padding-top: #{$value}#{$unit} !important; }
        .pr-#{$prefix}#{$size}#{$suffix} { padding-right: #{$value}#{$unit} !important; }
        .pb-#{$prefix}#{$size}#{$suffix} { padding-bottom: #{$value}#{$unit} !important; }
        .pl-#{$prefix}#{$size}#{$suffix} { padding-left: #{$value}#{$unit} !important; }
    }
}

/**
 * Global Padding Classes
 *
 * Generates padding utilities for:
 * - `.p-{value}`: Padding in rem (e.g., `.p-1` for 1rem).
 * - `.p-{value}vw`: Padding in vw (e.g., `.p-1vw` for 1vw).
 * - Special values for precise padding (e.g., `.p-05` for 0.5rem).
 */
@include generate-padding-classes(15, rem); // Padding from 0 to 15rem
@include generate-padding-classes(5, vw, "", "vw");  // Padding from 0 to 5vw
@include generate-special-padding-classes($special-paddings, rem); // Special padding sizes in rem

/**
 * Responsive Padding Classes for Small Screens
 *
 * Generates classes with `sm-` prefix:
 * - `.p-sm-{value}`: Padding for small screens (e.g., `.p-sm-1` for 1rem).
 * - Special sizes (e.g., `.p-sm-05` for 0.5rem).
 */
@media (max-width: 750px) {
    @include generate-padding-classes(15, rem, "sm-"); // Small screen rem paddings
    @include generate-special-padding-classes($special-paddings, rem, "sm-"); // Small screen special paddings
}


/* TODO: Validate */