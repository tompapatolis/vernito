/******************************************************************************
 * ASPECT RATIO UTILITIES
 *****************************************************************************/

/**
 * Fixed Aspect Ratios
 *
 * Provides utility classes for commonly used aspect ratios:
 * - `.aspect-1`: Square (1:1).
 * - `.aspect-169`: Widescreen (16:9), commonly used for video.
 * - `.aspect-32`: Standard photo (3:2), common in photography.
 * - `.aspect-43`: Legacy TV or image format (4:3).
 * - `.aspect-74`: Wide format (7:4), used in presentations.
 * - `.aspect-golden`: Golden ratio (1.618:1), aesthetically pleasing.
 */

.aspect-1 {
    aspect-ratio: 1; /* Square (1:1) */
}

.aspect-169 {
    aspect-ratio: 16 / 9; /* Widescreen video (16:9) */
}

.aspect-32 {
    aspect-ratio: 3 / 2; /* Photography standard (3:2) */
}

.aspect-43 {
    aspect-ratio: 4 / 3; /* Legacy TV or image format (4:3) */
}

.aspect-74 {
    aspect-ratio: 7 / 4; /* Wide presentation format (7:4) */
}

.aspect-golden {
    aspect-ratio: 1.618; /* Golden ratio (1.618:1) */
}

/**
 * Raw HTML Embed for CKEditor
 *
 * Ensures responsive design for embedded raw HTML and iframe elements
 * in CKEditor, maintaining a 16:9 aspect ratio and full width.
 */
 .raw-html-embed:not(.ck-widget),
 .raw-html-embed:not(.ck-widget) iframe {
     aspect-ratio: 16 / 9;
     width: 100%;
     height: auto;
     overflow: hidden;
 }

 /******************************************************************************
  * EVENTS AND INTERACTIVITY
  *****************************************************************************/

 /**
  * Disabled Elements
  *
  * - `.disabled`: Makes elements non-interactive and visually subdued.
  * - `.no-select`: Prevents text selection.
  * - `.no-events`: Completely disables pointer events.
  */
 .disabled {
     pointer-events: none;
     opacity: 0.45;
 }
 .no-select {
     user-select: none;
 }
 .no-events {
     pointer-events: none;
 }

 /**
  * Invisible Elements
  *
  * - `.invisible`: Hides elements visually while keeping their space in the DOM.
  */
 .invisible {
     visibility: hidden;
     pointer-events: none;
 }

 /******************************************************************************
  * HIDING ELEMENTS
  *****************************************************************************/

 /**
  * Hidden Class
  *
  * - `.hidden`: Completely hides elements, removing them from the layout.
  */
 .hidden {
     display: none !important;
 }

 /**
  * Hide for Large Screens and Smaller
  *
  * - `.hide-lg`: Hides elements when the viewport is 1200px or smaller.
  */
 @media (max-width: 1200px) {
     .hide-lg {
         display: none !important;
     }
 }

 /**
  * Hide for Medium Screens and Smaller
  *
  * - `.hide-md`: Hides elements when the viewport is 990px or smaller.
  */
 @media (max-width: 990px) {
     .hide-md {
         display: none !important;
     }
 }

 /**
  * Hide for Small Screens and Smaller
  *
  * - `.hide-sm`: Hides elements when the viewport is 750px or smaller.
  */
 @media (max-width: 750px) {
     .hide-sm {
         display: none !important;
     }
 }

 /**
  * Hide for Larger than Large Screens
  *
  * - `.hide-larger-lg`: Hides elements when the viewport is wider than 1200px.
  */
 @media (min-width: 1201px) {
     .hide-larger-lg {
         display: none !important;
     }
 }

 /**
  * Hide for Larger than Medium Screens
  *
  * - `.hide-larger-md`: Hides elements when the viewport is wider than 990px.
  */
 @media (min-width: 991px) {
     .hide-larger-md {
         display: none !important;
     }
 }

 /**
  * Hide for Larger than Small Screens
  *
  * - `.hide-larger-sm`: Hides elements when the viewport is wider than 750px.
  */
 @media (min-width: 751px) {
     .hide-larger-sm {
         display: none !important;
     }
 }

/******************************************************************************
 * DISPLAY UTILITIES
 *****************************************************************************/

.display-block {
    display: block;
}

.display-contents {
    display: contents;
}

.display-inline {
    display: inline;
}

.display-table {
    display: table;
}

.display-none {
    display: none;
}

/******************************************************************************
 * BORDER RADIUS UTILITIES
 *****************************************************************************/

/**
 * Border Radius Values
 *
 * - This map defines commonly used border-radius values for utility classes.
 * - Each key represents the class suffix, and each value specifies the radius size.
 *
 * Available Values:
 * - `0125`: 0.125rem (2px) - Slightly rounded corners.
 * - `025`: 0.25rem (4px) - Small rounded corners.
 * - `0375`: 0.375rem (6px) - Moderately rounded corners.
 * - `05`: 0.5rem (8px) - Default rounded corners.
 * - `065`: 0.65rem (10px) - Slightly larger rounded corners.
 * - `075`: 0.75rem (12px) - Larger rounded corners.
 * - `1`: 1rem (16px) - Fully rounded corners.
 * - `pill`: 9999px - Completely circular (pill-shaped) corners.
 */
 $border-radius: ('0125': 0.125rem, '025': 0.25rem, '0375': 0.375rem, '05': 0.5rem, '065': 0.65rem, '075': 0.75rem, '1': 1rem, 'pill': 9999px);

 /**
  * Generate Border Radius Utility Classes
  *
  * - Dynamically generates utility classes for each border-radius value in the map.
  * - Example Usage:
  *   - `<div class="br-05"></div>` applies `border-radius: 0.5rem;`
  *   - `<div class="br-pill"></div>` applies `border-radius: 9999px;`
  */
 @each $key, $value in $border-radius {
     .br-#{$key} {
         border-radius: #{$value};
     }
}

/******************************************************************************
 * SVG ICON UTILITIES
 *****************************************************************************/

/**
 * SVG Icon Base Class
 *
 * - `.svg-icon`: A base class for scalable vector graphics (SVG) icons.
 * - Automatically adjusts width, height, and fill color.
 *
 * Default Behavior:
 * - `width`: 1em
 * - `height`: 1em
 * - `fill`: Inherits the current text color (currentcolor).
 *
 * Additional Size Modifiers:
 * - `md`: 1.375em
 * - `lg`: 1.5em
 * - `xl`: 1.75em
 * - `2x` to `10x`: Scales the icon proportionally (e.g., 2em, 3em, ..., 10em).
 */
.svg-icon {
    width: 1em;
    height: 1em;
    fill: currentcolor;

    /**
     * Preset Size Modifiers
     *
     * - `.svg-icon-md`: Medium size (1.375em).
     * - `.svg-icon-lg`: Large size (1.5em).
     * - `.svg-icon-xl`: Extra large size (1.75em).
     */
    &.svg-icon-md {
        width: 1.375em;
        height: 1.375em;
    }

    &.svg-icon-lg {
        width: 1.5em;
        height: 1.5em;
    }

    &.svg-icon-xl {
        width: 1.75em;
        height: 1.75em;
    }

    /**
     * Dynamic Sizes (2x through 10x)
     *
     * - Dynamically generates classes `.svg-icon-2x` through `.svg-icon-10x`
     *   to scale icons proportionally by a multiplier.
     */
    @for $i from 2 through 5 {
        &.svg-icon-#{$i}x {
            width: #{$i}em;
            height: #{$i}em;
        }
    }
}

/******************************************************************************
 * POSITION UTILITIES
 *****************************************************************************/

/**
 * Relative Positioning
 *
 * - `.pos-relative`: Positions the element relative to its normal static position.
 * - Allows child elements with `absolute` positioning to be positioned relative to this element.
 */
 .pos-relative {
    position: relative;
}

/**
 * Absolute Positioning
 *
 * - `.pos-absolute`: Positions the element relative to its nearest positioned ancestor
 *   (an ancestor with `relative`, `absolute`, or `fixed` positioning).
 * - Removes the element from the normal document flow.
 */
.pos-absolute {
    position: absolute;
}

/******************************************************************************
 * BORDER COLOR UTILITIES
 *****************************************************************************/

/**
 * Shades Array
 *
 * - Array of color shades corresponding to CSS custom properties.
 * - Dynamically generates border-top (`bt-*`) and border-bottom (`bb-*`) utility classes.
 */
$shades: (50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000);

@each $shade in $shades {
    .bt-#{$shade} {
        border-top: 1px solid var(--color-#{$shade});
    }

    .bb-#{$shade} {
        border-bottom: 1px solid var(--color-#{$shade});
    }
}

/******************************************************************************
 * PAGE PADDING UTILITIES
 *****************************************************************************/

/**
 * Default Page Padding
 *
 * - Defines the `--page-padding` custom property for consistent spacing.
 * - Shorthand syntax: `top right bottom left`.
 */
:root {
    --page-padding: 3rem 0 7rem 0; /* Top: 5rem, Right: 0, Bottom: 7rem, Left: 0 */
}

/**
 * Responsive Page Padding
 *
 * - Adjusts `--page-padding` for smaller screens using a media query.
 * - Targets screens with a max width of 750px.
 */
@media (max-width: 750px) {
    :root {
        --page-padding: 1rem 0 3rem 0; /* Top: 2rem, Right: 0, Bottom: 3rem, Left: 0 */
    }
}

/**
 * Page Padding Class
 *
 * - Applies the `--page-padding` variable as the padding for elements.
 */
.page-padding {
    padding: var(--page-padding);
}

/******************************************************************************
 * RESET UTILITIES
 *****************************************************************************/

/**
 * Reset List
 *
 * - Removes default list styles, margin, and padding for `ul` and `li` elements.
 * - Ensures consistent appearance for lists and nested lists.
 */

.reset-list {
    list-style: none; /* Removes bullet points and other list styles */
    margin: 0; /* Removes default margin */
    padding: 0; /* Removes default padding */

    li {
      list-style: none; /* Ensures no list style on child li elements */
      margin: 0; /* Ensures no margin on child li elements */
      padding: 0; /* Ensures no padding on child li elements */
    }
}

